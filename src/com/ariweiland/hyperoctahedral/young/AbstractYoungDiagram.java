package com.ariweiland.hyperoctahedral.young;

import java.util.Map;

/**
 * A superclass for YoungDiagram and SignedYoungDiagram, detailing a few methods that both classes use.
 * @author Ari Weiland
 */
public abstract class AbstractYoungDiagram<T extends AbstractYoungDiagram<T>> implements Comparable<T>{

    /**
     * Returns true if the Young Diagram contains no boxes.
     * @return
     */
    public abstract boolean isEmpty();

    /**
     * Returns a new Young Diagram that is the reflection of this one about its diagonal axis.
     * @return
     */
    public abstract AbstractYoungDiagram reflect();

    /**
     * Returns a map of Young Diagrams generated by removing a border edge chunk of length n from
     * this Young Diagram, mapped to the height of the chunk removed.
     * @param n
     * @return
     */
    public abstract Map<T, Integer> reduce(int n);
}
